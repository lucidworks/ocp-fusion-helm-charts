---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: "{{ include "fusion.job-launcher.fullname" .  }}-spark-cleanup"
  labels:
    app.kubernetes.io/name: spark-cleanup
spec:
  schedule: "{{ .Values.sparkCleanupSchedule }}"
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/name: spark-cleanup
        spec:
        {{- if .Values.sparkCleanup.nodeSelector }}
          nodeSelector:
            {{ toYaml .Values.sparkCleanup.nodeSelector | nindent 12 }}
        {{- end }}
          containers:
            - name: kubectl-runner
              image: {{ .Values.image.kubectlImage }}
              command: ["sh", "-c", "kubectl delete pods --namespace {{ .Values.sparkNamespace | default .Release.Namespace }} --field-selector=status.phase=Succeeded -l spark-role=driver"]
              resources: {{ toYaml .Values.sparkCleanup.resources | nindent 16 }}
          restartPolicy: Never
  successfulJobsHistoryLimit: 0
---
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: "{{ include "fusion.job-launcher.fullname" . }}"
  labels:
    app.kubernetes.io/name: ml-argo-clean-up
spec:
  schedule: "{{ .Values.argoCleanupSchedule }}"
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/name: ml-argo-cleanup
        spec:

        {{- if .Values.argoCleanup.nodeSelector }}
          nodeSelector:
            {{ toYaml .Values.argoCleanup.nodeSelector | nindent 12 }}
        {{- end }}
          containers:
            - name: kubectl-runner
              image: {{ .Values.image.kubectlImage }}
              command: ["sh", "-c", "kubectl delete pods --namespace {{ default .Release.Namespace }} --field-selector=status.phase=Succeeded -l workflows.argoproj.io/completed=true"]
              resources: {{ toYaml .Values.argoCleanup.resources | nindent 16 }}
          restartPolicy: Never
  successfulJobsHistoryLimit: 0
