---
{{- $tlsEnabled := ( eq (include "fusion.tls.enabled" .) "true" ) -}}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "fusion.fusion-log-forwarder.fullname" .  }}
  labels: {{ include "fusion.fusion-log-forwarder.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}

  {{- if .Values.deploymentStrategy }}
  strategy:
    {{ toYaml .Values.deploymentStrategy | nindent 4 }}
  {{- end }}
  selector:
    matchLabels:
      app.kubernetes.io/instance: "{{ .Release.Name }}"
      app.kubernetes.io/component: "fusion-log-forwarder"
      app.kubernetes.io/part-of: "fusion"
  template:
    metadata:
      name: {{ include "fusion.fusion-log-forwarder.fullname" .  }}
      labels:
        app.kubernetes.io/instance: "{{ .Release.Name }}"
        app.kubernetes.io/component: "fusion-log-forwarder"
        app.kubernetes.io/part-of: "fusion"
      annotations:
        {{ toYaml .Values.pod.annotations | nindent 8 }}
    spec:
{{- if $tlsEnabled }}
      serviceAccount: "{{ .Values.rbac.serviceAccountName | default ( include "fusion.fusion-log-forwarder.fullname" . ) }}"
{{- end }}

    {{- if .Values.nodeSelector }}
      nodeSelector:
        {{ toYaml .Values.nodeSelector | nindent 8 }}
    {{- end }}
    {{- if .Values.affinity }}
      affinity:
        {{ tpl (toYaml .Values.affinity) . | nindent 8 }}
    {{- end }}
{{- if $tlsEnabled }}
      volumes:
{{ $params := dict "tlsServiceName" "fusion-log-forwarder" "Release" $.Release "global" $.Values.global "tls" $.Values.tls  "keytoolUtils" $.Values.keytoolUtils }}
{{ include "fusion.tls.volumes" $params | indent 8 }}
{{- end }}
      imagePullSecrets: {{ toYaml .Values.image.imagePullSecrets | nindent 8 }}
      {{ if .Values.priorityClassName }}
      priorityClassName: "{{ .Values.priorityClassName }}"
      {{ end }}
      {{ if .Values.tolerations }}
      tolerations: {{ .Values.tolerations | toYaml | nindent 8 }}
      {{ end }}
      {{ if .Values.schedulerName }}
      schedulerName: {{ .Values.schedulerName | quote }}
      {{ end }}
      {{ if .Values.terminationGracePeriodSeconds }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      {{ end }}
      initContainers:
{{- if $tlsEnabled -}}
{{ $params := dict "tlsServiceName" "fusion-log-forwarder" "Release" $.Release "global" $.Values.global "tls" $.Values.tls  "keytoolUtils" $.Values.keytoolUtils }}
{{ include "fusion.tls.init-container-v2" $params | indent 8 }}
{{- end }}
{{- include "fusion.initContainers.checkPulsar-v2" . | nindent 8 }}
      containers:
      - name: fusion-log-forwarder
        image: "{{ .Values.image.repository }}/{{ .Values.image.name }}:{{ .Values.image.tag }}"
        imagePullPolicy: "{{ .Values.image.imagePullPolicy }}"

        env:
          - name: "PULSAR_TOPIC"
            value: {{ .Values.pulsarTopic | quote }}
          - name: "PULSAR_NAMESPACE"
            value: {{ .Values.pulsarNamespace | quote }}
          - name: "PULSAR_TENANT"
            value: {{ .Release.Namespace | quote }}
          - name: "SOLR_URL"
            value: {{ include "fusion.fusion-log-forwarder.solrurl" . | quote }}
          - name: "PULSAR_URL"
            value: {{ include "fusion.fusion-log-forwarder.pulsarServiceUrl" . | quote }}
          - name: "PULSAR_ADMIN_URL"
            value: {{ include "fusion.fusion-log-forwarder.pulsarAdminUrl" . | quote }}
          - name: "BATCH_SIZE"
            value: {{ .Values.batchSize | quote }}
          - name: "PROCESSOR_COUNT"
            value: {{ .Values.processorCount | quote }}
          - name: "PULSAR_BACKLOG_LIMIT"
            value: {{ .Values.pulsarBacklogLimit | quote }}
          - name: "PULSAR_NAMESPACE_SIZE_RETENTION"
            value: {{ .Values.pulsarNamespaceSizeRetention | quote }}
          - name: "PULSAR_NAMESPACE_TIME_RETENTION"
            value: {{ .Values.pulsarNamespaceTimeRetention | quote }}
          - name: "PULSAR_BACKLOG_POLICY"
            value: {{ .Values.pulsarBacklogPolicy | quote }}
{{ if $tlsEnabled }}
          - name: "TRUSTED_CA_CERTIFICATE"
            value: "/tls/ca.crt"
        volumeMounts:
          - name: "keystore-volume"
            mountPath: "/tls"
{{ end }}
        livenessProbe:
          failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
          timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          httpGet:
            path: /liveness
            port: 8080
        resources:
          {{ toYaml .Values.resources | nindent 10 }}
