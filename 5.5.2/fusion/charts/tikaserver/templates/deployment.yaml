{{- $tlsEnabled := ( eq (include "fusion.tls.enabled" .) "true" ) -}}

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "fusion.tikaserver.fullname" .  }}
  labels:
    {{ include "fusion.tikaserver.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  {{- if .Values.deploymentStrategy }}
  strategy:
    {{ toYaml .Values.deploymentStrategy | nindent 4 }}
  {{- end }}
  selector:
    matchLabels:
      app.kubernetes.io/name: "{{ include "fusion.tikaserver.name" . }}"
      app.kubernetes.io/instance: "{{ .Release.Name }}"
      app.kubernetes.io/component: "tikaserver"
  template:
    metadata:
      name: {{ include "fusion.tikaserver.fullname" .  }}
      labels:
        app.kubernetes.io/name: "{{ include "fusion.tikaserver.name" . }}"
        app.kubernetes.io/instance: "{{ .Release.Name }}"
        app.kubernetes.io/component: "tikaserver"
      annotations:
        {{ toYaml .Values.pod.annotations | nindent 8 }}
    spec:
    {{- if .Values.nodeSelector }}
      nodeSelector:
        {{ toYaml .Values.nodeSelector | nindent 8 }}
    {{- end }}
    {{- if .Values.affinity }}
      affinity:
        {{ tpl (toYaml .Values.affinity) . | nindent 8 }}
    {{- end }}
      imagePullSecrets:
        {{ toYaml .Values.image.imagePullSecrets | nindent 8 }}
    {{- if .Values.priorityClassName }}
      priorityClassName: "{{ .Values.priorityClassName }}"
    {{- end }}
    {{- if .Values.tolerations }}
      tolerations: {{ .Values.tolerations | toYaml | nindent 8 }}
    {{- end }}
    {{ if .Values.schedulerName }}
      schedulerName: {{ .Values.schedulerName | quote }}
    {{- end }}
    {{- if .Values.terminationGracePeriodSeconds }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
    {{- end }}
      containers:
      - name: tikaserver
        image: "{{ .Values.image.repository }}/{{ .Values.image.name }}:{{ .Values.image.tag }}"
        imagePullPolicy: "{{ .Values.image.imagePullPolicy }}"
        {{- if not $tlsEnabled }}
        command:
          - /bin/sh
          - -c
          - exec java -jar /tika-server-1.28.1.jar --spawnChild -h 0.0.0.0 $0 $@
          - -c /tika-config.xml
        {{- else }}
        command:
          - /bin/sh
          - -c
          - echo 'TLS not supported'
        {{- end }}
        ports:
          - containerPort: {{ .Values.port }}
        lifecycle:
          preStop:
            exec:
              command: ["sleep", "{{ .Values.preStopSleepTime }}"]
        livenessProbe:
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
          failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
          httpGet:
            scheme: "HTTP"
            path: /tika
            port: {{ .Values.port }}
        readinessProbe:
          initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.readinessProbe.successThreshold }}
          failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
          httpGet:
            scheme: "HTTP"
            path: /tika
            port: {{ .Values.port }}
        volumeMounts:
          - name: tmp
            mountPath: /tmp
          - name: tika-config
            mountPath: "/tika-config.xml"
            subPath: "tika-config.xml"
      volumes:
        - name: tmp
          emptyDir: { }
        - name: tika-config
          configMap:
            name: "tika-config"
